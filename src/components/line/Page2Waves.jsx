import React, { useEffect } from "react"
// import { useDimensions } from "@/utils/useDimensions"
import { useAppContext } from "@utils/appContext.js"
// import { Path, TextAnimate } from '@/components/line/pathUtils'
// import { SVGWrapper } from "./contextSVG"
import { usePageContext } from "@utils/pageContext"
// import { PageWrapper } from "@context/pageContext"
// import AnimateSVG from "./AnimateSVG"
// import AnimateSVGBanner from "./AnimateSVGBanner"
// import { gsap } from "gsap/dist/gsap"
import { PathGSAP, PathGSAPStandalone } from "./pathUtilsGsap"
// import { ScrollTrigger } from "gsap/dist/ScrollTrigger"
// import useStateRef from "@/utils/useStateRef"
// gsap.registerPlugin(ScrollTrigger)

let waves = [
  "M1365.05 424.64C1387.77 435.33 1397.7 406.8 1415.16 415.81C1432.63 424.82 1421.17 450.96 1433.59 457.3C1446.01 463.65 1467.65 442.35 1478.28 449.83C1488.91 457.32 1480.34 472.83 1492.59 477.6C1504.85 482.38 1511.95 475.77 1517.65 480.11C1523.34 484.45 1528.54 497.9 1534.67 500.29",
  "M563.562 218.71C543.502 201.39 564.033 179.1 556.31 169.89C548.587 160.67 528.458 173.85 518.01 161.39C507.561 148.93 528.621 137.38 517.344 129.25C506.067 121.12 497.601 133.02 485.097 119",
  "M448.066 520.57C423.846 531.34 437.037 558.62 426.975 565.2C416.914 571.77 398.612 556.3 385 565.2C371.388 574.1 377.093 586.1 372.5 593.1C367.907 600.1 356.5 593.1 350 605.24C346.5 613.74 345.5 613.24 340 618.24",
  "M348.731 385.95C322.268 384.47 321.554 414.77 309.599 416.03C297.644 417.29 288.423 395.16 272.25 396.87C256.077 398.58 255.675 411.86 248.393 415.99C241.111 420.12 234.157 408.69 222.831 416.53C215.837 422.49 215.176 421.59 208 423.53",
  "M1432 298.38C1458.5 298.6 1457.78 268.31 1469.66 266.48C1481.54 264.65 1491.8 286.31 1507.88 283.84C1523.95 281.37 1521.1 269.74 1530.8 263.61C1540.5 257.48 1544.5 271 1556.46 267.58",
  "M364.123 268.45C360.249 264.68 357.87 262.71 353.641 261.92C348.726 261 337.648 268.61 330.149 265.17C322.65 261.74 325.463 252.1 318.296 244.15C311.129 236.2 299.039 246.51 290.769 239.03C286.525 235.18 288.518 232 281.477 226.11",
  "M1316 568C1322 575.5 1341.5 566 1347.5 574.5C1353.5 583 1340.5 593.5 1347.5 601C1354.5 608.5 1365.5 605 1369.5 609.5C1372.5 614 1368 622 1375.5 629",
  "M662.85 90.6001C651.725 77.1601 662.241 69.7099 658.561 63.4399C654.882 57.1699 647.839 57.78 644.314 49.99C640.788 42.21 647.604 43 645.642 36.12C643.68 29.23 633.171 24.74 630.825 19.22C628.48 13.7 628.226 5.96 624.405 1",
  "M1536.22 388.79C1552.78 383.3 1557.64 396.19 1564.82 395.04C1572 393.88 1574.82 387.25 1583.36 386.79C1591.89 386.33 1594.38 393.41 1601.5 394.08C1608.63 394.75 1610.76 389.66 1618.34 388.9C1624.29 388.3 1630.46 390.78 1635.35 390.78",
  "M243.473 317.96C226.456 321.81 222.868 308.51 215.612 308.96C208.357 309.41 204.899 315.74 196.363 315.36C187.827 314.99 186.037 307.71 179.009 306.34C171.981 304.98 169.366 309.85 161.751 309.86C155.767 309.88 149.87 306.81 145 306.33",
  "M1476 607.55C1487.71 620.49 1494.54 607.67 1500.22 612.21C1505.9 616.75 1506.33 627.11 1513.53 631.71C1520.73 636.32 1520.92 629.46 1527.46 632.39C1533.99 635.31 1537.11 647.46 1542.24 650.57C1547.53 653.78 1555.67 653.4 1559.33 657.87",
  "M313.068 149.01C296.19 144.59 299.125 131.14 292.478 128.2C285.831 125.25 279.847 129.28 272.442 125.02C265.036 120.76 266.8 113.47 261.188 109.02C255.576 104.58 251.015 107.69 244.246 104.2C238.928 101.46 235.105 96.0201 231 93.3601",
]

let wavesMobile = [
  "M373 2013.62C395.72 2024.31 405.65 1995.78 423.11 2004.79C440.58 2013.8 429.12 2039.94 441.54 2046.28C453.96 2052.63 475.6 2031.33 486.23 2038.81C496.86 2046.3 488.29 2061.81 500.54 2066.58C512.8 2071.36 519.9 2064.75 525.6 2069.09C531.29 2073.43 536.49 2086.88 542.62 2089.27",
  "M200.465 1881.71C180.405 1864.39 200.936 1842.1 193.213 1832.89C185.49 1823.67 165.361 1836.85 154.913 1824.39C144.464 1811.93 165.524 1800.38 154.247 1792.25C142.97 1784.12 134.504 1796.02 122 1782",
  "M166.066 2062C141.846 2072.77 155.037 2100.05 144.975 2106.63C134.914 2113.2 116.612 2097.73 103 2106.63C89.388 2115.53 95.093 2127.53 90.5 2134.53C85.907 2141.53 74.5 2134.53 68 2146.67C64.5 2155.17 63.5 2154.67 58 2159.67",
  "M121.731 2004.05C95.268 2002.57 94.554 2032.87 82.599 2034.13C70.644 2035.39 61.423 2013.26 45.25 2014.97C29.077 2016.68 28.675 2029.96 21.393 2034.09C14.111 2038.22 7.15699 2026.79 -4.16901 2034.63C-11.163 2040.59 -11.824 2039.69 -19 2041.63",
  "M419 1912.39C445.5 1912.61 444.78 1882.32 456.66 1880.49C468.54 1878.66 478.8 1900.32 494.88 1897.85C510.95 1895.38 508.1 1883.75 517.8 1877.62C527.5 1871.49 531.5 1885.01 543.46 1881.59",
  "M128.646 1897.34C124.772 1893.57 122.393 1891.6 118.164 1890.81C113.249 1889.89 102.171 1897.5 94.672 1894.06C87.173 1890.63 89.986 1880.99 82.819 1873.04C75.652 1865.09 63.562 1875.4 55.292 1867.92C51.048 1864.07 53.041 1860.89 46 1855",
  "M334.604 2099C339.622 2107.19 360.154 2100.19 365.048 2109.38C369.942 2118.56 355.734 2127.36 361.745 2135.67C367.755 2143.98 379.106 2141.88 382.513 2146.85C384.929 2151.68 379.467 2159.06 386.036 2166.94",
  "M204.445 1808.6C193.32 1795.16 203.836 1787.71 200.156 1781.44C196.477 1775.17 189.434 1775.78 185.909 1767.99C182.383 1760.21 189.199 1761 187.237 1754.12C185.275 1747.23 174.766 1742.74 172.42 1737.22C170.075 1731.7 169.821 1723.96 166 1719",
  "M462 1982.02C478.56 1976.53 483.42 1989.42 490.6 1988.27C497.78 1987.11 500.6 1980.48 509.14 1980.02C517.67 1979.56 520.16 1986.64 527.28 1987.31C534.41 1987.98 536.54 1982.89 544.12 1982.13C550.07 1981.53 556.24 1984.01 561.13 1984.01",
  "M100.473 1933.86C83.456 1937.71 79.868 1924.41 72.612 1924.86C65.357 1925.31 61.899 1931.64 53.363 1931.26C44.827 1930.89 43.037 1923.61 36.009 1922.24C28.981 1920.88 26.366 1925.75 18.751 1925.76C12.767 1925.78 6.87 1922.71 2 1922.23",
  "M414 2091C425.71 2103.94 432.54 2091.12 438.22 2095.66C443.9 2100.2 444.33 2110.56 451.53 2115.16C458.73 2119.77 458.92 2112.91 465.46 2115.84C471.99 2118.76 475.11 2130.91 480.24 2134.02C485.53 2137.23 493.67 2136.85 497.33 2141.32",
  "M106.068 1837.65C89.19 1833.23 92.125 1819.78 85.478 1816.84C78.831 1813.89 72.847 1817.92 65.442 1813.66C58.036 1809.4 59.8 1802.11 54.188 1797.66C48.576 1793.22 44.015 1796.33 37.246 1792.84C31.928 1790.1 28.105 1784.66 24 1782",
]

export default function Page2Waves({ className, style, scrubTl, transitionTl, animationName }) {

  let { locale, scrolled } = useAppContext()

  let { mobile } = usePageContext()

  let fishTweens = [
    {
      timeline: scrubTl,
      id: `fishScrub`,
      ratio: 0.5,
      attr: {
        duration: 0.9,
        ease: 'power3.out',
        // onStart:()=>{console.log('start One')} 
      },
      position: 0.1
    },
  ]

  let fishFinal = ["M565.227 629.19C563.57 629.02 562.174 626.36 560.974 624.75C558.103 620.9 562.437 622.43 563.474 625.58C563.941 626.99 565.183 627.6 565.227 629.19ZM565.227 629.19C566.885 629.36 562.534 627.08 563.474 627.08L561.974 625.58L565.227 629.19Z"]
  let fishFinalMobile = ["M361.65 2190.31C359.993 2190.14 358.597 2187.48 357.397 2185.87C354.526 2182.02 358.86 2183.55 359.897 2186.7C360.364 2188.11 361.606 2188.72 361.65 2190.31ZM361.65 2190.31C363.308 2190.48 358.957 2188.2 359.897 2188.2L358.397 2186.7L361.65 2190.31Z"]

  useEffect(() => {
    scrubTl && scrubTl
      .to('#fish', {
        opacity: 1,
        duration: 0.1
      }, 1)
      .to('#toFish', {
        opacity: 0,
        duration: 0.1
      }, 1)
      .to('#fish', {
        motionPath: {
          path: '#alongPath',
          align: '#alongPath',
          immediateRender: true,
          alignOrigin: [0.5, 0.5],
          autoRotate: 130,
        },
        ease: 'ease.inout',
        duration: 1,
        transformOrigin: "50% 50%",
      }, 1.05)
      .to('#fish', {
        attr: { d: mobile ? fishFinalMobile[0] : fishFinal[0] },
        duration: 0.5,
      }, 1.55)
      .to('#fish', {
        opacity: 0,
        duration: 0.05,
      }, 1.95)
  }, [scrubTl])

  return (
    <div style={{...style }} className={`${animationName} ${className && className}`}>

      <svg className={`${animationName}Inner w-full h-full relative top-[0]`} alt='wave animation' width="1782" height="667" viewBox="0 0 1782 667" fill="none" xmlns="http://www.w3.org/2000/svg">
        {/* mobile */}
        {false ?
          <g id='mobile'>

            {/* ====== WAVES ========  */}
            {wavesMobile.map((wavePath, i) => <PathGSAPStandalone tweens={[{ timeline: transitionTl, id: `wave${i}Transition`, ratio: 1, attr: { duration: 1, ease: 'none' }, position: 1.4 + (i) * 0.1 }]}
              className='' transitStrokeAnimation transitPortion={0.6} scrolled={0} key={'wavePath' + i} id={'wavePath' + i} d={wavePath} />)
            }


            <PathGSAPStandalone tweens={fishTweens} inverse={true} transitStrokeAnimation transitPortion={0.52} id="toFish" d="M373.922 2214.58L386.297 2201.19C383.455 2201.45 378.9 2202.48 373.922 2202.64C367.922 2202.64 361.583 2201.05 356.021 2196.1C345.922 2187.12 361.922 2175.12 370.178 2187.73C372.691 2191.57 372.433 2195.13 372.036 2201.19C370.299 2227.68 391.464 2222.08 398.422 2217.62C415.602 2206.61 401.693 2188 408.73 2181.96C415.767 2175.91 429.066 2195.13 440.709 2185.72" stroke="#FFF5EA" strokeWidth="2" strokeLinecap="round" />
            <path opacity={0} id="fish" d="M371.406 2202.33C365.795 2201.75 359.963 2199.8 355.899 2194.35C346.176 2181.31 367.237 2176.62 370.748 2187.28C372.329 2192.08 371.258 2196.94 371.406 2202.33ZM371.406 2202.33C377.021 2202.91 382.414 2202.13 385.597 2202.13L371.809 2215.92L371.406 2202.33Z" stroke="#FFF5EA" strokeWidth="2" strokeLinecap="round" />
            <path opacity={0} id="alongPath" d="M368.423 2196.62C344.923 2176.12 346.423 2150.12 316.923 2150.12C299.923 2150.12 266.423 2159.12 266.423 2185.62" stroke="black" />
            {/* <path id="fishFinal" d="M361.65 2190.31C359.993 2190.14 358.597 2187.48 357.397 2185.87C354.526 2182.02 358.86 2183.55 359.897 2186.7C360.364 2188.11 361.606 2188.72 361.65 2190.31ZM361.65 2190.31C363.308 2190.48 358.957 2188.2 359.897 2188.2L358.397 2186.7L361.65 2190.31Z" stroke="#FFF5EA" strokeWidth="2" strokeLinecap="round"/> */}


          </g>
          :
          <g id='desktopPage1'>

            {/* ====== WAVES ========  */}
            {waves.map((wavePath, i) => <PathGSAPStandalone tweens={[{ timeline: transitionTl, id: `wave${i}Transition`, ratio: 1, attr: { duration: 1, ease: 'none' }, position: 1.4 + (i) * 0.1 }]}
              className='' transitStrokeAnimation transitPortion={0.6} scrolled={0} key={'wavePath' + i} id={'wavePath' + i} d={wavePath} />)
            }

            {/* ====== FISH ========  */}

            <PathGSAPStandalone tweens={fishTweens} inverse={true} transitStrokeAnimation transitPortion={0.52} id="toFish" d="M577.5 653.46L589.875 640.07C587.033 640.33 582.478 641.36 577.5 641.52C571.5 641.52 565.161 639.93 559.599 634.98C549.5 626 565.5 614 573.756 626.61C576.269 630.45 576.011 634.01 575.614 640.07C573.877 666.56 595.042 660.96 602 656.5C619.18 645.49 605.271 626.88 612.308 620.84C619.345 614.79 632.644 634.01 644.287 624.6" stroke="#FFF5EA" strokeWidth="2" />
            <path opacity={0} id="fish" d="M574.984 641.21C569.373 640.63 563.541 638.68 559.477 633.23C549.754 620.19 570.815 615.5 574.326 626.16C575.907 630.96 574.836 635.82 574.984 641.21ZM574.984 641.21C580.599 641.79 585.992 641.01 589.175 641.01L575.387 654.8L574.984 641.21Z" stroke="#FFF5EA" strokeWidth="2" strokeLinecap="round" />
            <path opacity={0} id="alongPath" d="M572 635.5C548.5 615 550 589 520.5 589C503.5 589 470 598 470 624.5" stroke="black" />
            {/* <path id="fishFinal" d="M565.227 629.19C563.57 629.02 562.174 626.36 560.974 624.75C558.103 620.9 562.437 622.43 563.474 625.58C563.941 626.99 565.183 627.6 565.227 629.19ZM565.227 629.19C566.885 629.36 562.534 627.08 563.474 627.08L561.974 625.58L565.227 629.19Z" stroke="#FFF5EA" strokeWidth="2" /> */}

          </g>}

      </svg>


    </div>
  )
}