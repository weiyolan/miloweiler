import React, { useEffect } from "react"
// import { useDimensions } from "@/utils/useDimensions"
import { useAppContext } from "@utils/appContext.js"
import { Path, TextAnimate } from '@/components/line/pathUtils'
// import { SVGWrapper } from "./contextSVG"
import { usePageContext } from "@utils/pageContext"
// import { PageWrapper } from "@context/pageContext"
import AnimateSVG from "./AnimateSVG"
// import AnimateSVGBanner from "./AnimateSVGBanner"
// import { gsap } from "gsap/dist/gsap"
import { PathGSAP } from "./pathUtilsGsap"
// import { ScrollTrigger } from "gsap/dist/ScrollTrigger"
// import useStateRef from "@/utils/useStateRef"
// gsap.registerPlugin(ScrollTrigger)

let waves = [
  "M1365.05 2392.64C1387.77 2403.33 1397.7 2374.8 1415.16 2383.81C1432.63 2392.82 1421.17 2418.96 1433.59 2425.3C1446.01 2431.65 1467.65 2410.35 1478.28 2417.83C1488.91 2425.32 1480.34 2440.83 1492.59 2445.6C1504.85 2450.38 1511.95 2443.77 1517.65 2448.11C1523.34 2452.45 1528.54 2465.9 1534.67 2468.29",
  "M563.562 2186.71C543.502 2169.39 564.033 2147.1 556.31 2137.89C548.587 2128.67 528.458 2141.85 518.01 2129.39C507.561 2116.93 528.621 2105.38 517.344 2097.25C506.067 2089.12 497.601 2101.02 485.097 2087",
  "M448.066 2488.57C423.846 2499.34 437.037 2526.62 426.975 2533.2C416.914 2539.77 398.612 2524.3 385 2533.2C371.388 2542.1 377.093 2554.1 372.5 2561.1C367.907 2568.1 356.5 2561.1 350 2573.24C346.5 2581.74 345.5 2581.24 340 2586.24",
  "M348.731 2353.95C322.268 2352.47 321.554 2382.77 309.599 2384.03C297.644 2385.29 288.423 2363.16 272.25 2364.87C256.077 2366.58 255.675 2379.86 248.393 2383.99C241.111 2388.12 234.157 2376.69 222.831 2384.53C215.837 2390.49 215.176 2389.59 208 2391.53",
  "M1432 2266.38C1458.5 2266.6 1457.78 2236.31 1469.66 2234.48C1481.54 2232.65 1491.8 2254.31 1507.88 2251.84C1523.95 2249.37 1521.1 2237.74 1530.8 2231.61C1540.5 2225.48 1544.5 2239 1556.46 2235.58",
  "M364.123 2236.45C360.249 2232.68 357.87 2230.71 353.641 2229.92C348.726 2229 337.648 2236.61 330.149 2233.17C322.65 2229.74 325.463 2220.1 318.296 2212.15C311.129 2204.2 299.039 2214.51 290.769 2207.03C286.525 2203.18 288.518 2200 281.477 2194.11",
  "M1316 2536C1322 2543.5 1341.5 2534 1347.5 2542.5C1353.5 2551 1340.5 2561.5 1347.5 2569C1354.5 2576.5 1365.5 2573 1369.5 2577.5C1372.5 2582 1368 2590 1375.5 2597",
  "M662.85 2058.6C651.725 2045.16 662.241 2037.71 658.561 2031.44C654.882 2025.17 647.839 2025.78 644.314 2017.99C640.788 2010.21 647.604 2011 645.642 2004.12C643.68 1997.23 633.171 1992.74 630.825 1987.22C628.48 1981.7 628.226 1973.96 624.405 1969",
  "M1536.22 2356.79C1552.78 2351.3 1557.64 2364.19 1564.82 2363.04C1572 2361.88 1574.82 2355.25 1583.36 2354.79C1591.89 2354.33 1594.38 2361.41 1601.5 2362.08C1608.63 2362.75 1610.76 2357.66 1618.34 2356.9C1624.29 2356.3 1630.46 2358.78 1635.35 2358.78",
  "M243.473 2285.96C226.456 2289.81 222.868 2276.51 215.612 2276.96C208.357 2277.41 204.899 2283.74 196.363 2283.36C187.827 2282.99 186.037 2275.71 179.009 2274.34C171.981 2272.98 169.366 2277.85 161.751 2277.86C155.767 2277.88 149.87 2274.81 145 2274.33",
  "M1476 2575.55C1487.71 2588.49 1494.54 2575.67 1500.22 2580.21C1505.9 2584.75 1506.33 2595.11 1513.53 2599.71C1520.73 2604.32 1520.92 2597.46 1527.46 2600.39C1533.99 2603.31 1537.11 2615.46 1542.24 2618.57C1547.53 2621.78 1555.67 2621.4 1559.33 2625.87",
  "M313.068 2117.01C296.19 2112.59 299.125 2099.14 292.478 2096.2C285.831 2093.25 279.847 2097.28 272.442 2093.02C265.036 2088.76 266.8 2081.47 261.188 2077.02C255.576 2072.58 251.015 2075.69 244.246 2072.2C238.928 2069.46 235.105 2064.02 231 2061.36",
]

let wavesMobile = [
  "M373 2013.62C395.72 2024.31 405.65 1995.78 423.11 2004.79C440.58 2013.8 429.12 2039.94 441.54 2046.28C453.96 2052.63 475.6 2031.33 486.23 2038.81C496.86 2046.3 488.29 2061.81 500.54 2066.58C512.8 2071.36 519.9 2064.75 525.6 2069.09C531.29 2073.43 536.49 2086.88 542.62 2089.27",
  "M200.465 1881.71C180.405 1864.39 200.936 1842.1 193.213 1832.89C185.49 1823.67 165.361 1836.85 154.913 1824.39C144.464 1811.93 165.524 1800.38 154.247 1792.25C142.97 1784.12 134.504 1796.02 122 1782",
  "M166.066 2062C141.846 2072.77 155.037 2100.05 144.975 2106.63C134.914 2113.2 116.612 2097.73 103 2106.63C89.388 2115.53 95.093 2127.53 90.5 2134.53C85.907 2141.53 74.5 2134.53 68 2146.67C64.5 2155.17 63.5 2154.67 58 2159.67",
  "M121.731 2004.05C95.268 2002.57 94.554 2032.87 82.599 2034.13C70.644 2035.39 61.423 2013.26 45.25 2014.97C29.077 2016.68 28.675 2029.96 21.393 2034.09C14.111 2038.22 7.15699 2026.79 -4.16901 2034.63C-11.163 2040.59 -11.824 2039.69 -19 2041.63",
  "M419 1912.39C445.5 1912.61 444.78 1882.32 456.66 1880.49C468.54 1878.66 478.8 1900.32 494.88 1897.85C510.95 1895.38 508.1 1883.75 517.8 1877.62C527.5 1871.49 531.5 1885.01 543.46 1881.59",
  "M128.646 1897.34C124.772 1893.57 122.393 1891.6 118.164 1890.81C113.249 1889.89 102.171 1897.5 94.672 1894.06C87.173 1890.63 89.986 1880.99 82.819 1873.04C75.652 1865.09 63.562 1875.4 55.292 1867.92C51.048 1864.07 53.041 1860.89 46 1855",
  "M334.604 2099C339.622 2107.19 360.154 2100.19 365.048 2109.38C369.942 2118.56 355.734 2127.36 361.745 2135.67C367.755 2143.98 379.106 2141.88 382.513 2146.85C384.929 2151.68 379.467 2159.06 386.036 2166.94",
  "M204.445 1808.6C193.32 1795.16 203.836 1787.71 200.156 1781.44C196.477 1775.17 189.434 1775.78 185.909 1767.99C182.383 1760.21 189.199 1761 187.237 1754.12C185.275 1747.23 174.766 1742.74 172.42 1737.22C170.075 1731.7 169.821 1723.96 166 1719",
  "M462 1982.02C478.56 1976.53 483.42 1989.42 490.6 1988.27C497.78 1987.11 500.6 1980.48 509.14 1980.02C517.67 1979.56 520.16 1986.64 527.28 1987.31C534.41 1987.98 536.54 1982.89 544.12 1982.13C550.07 1981.53 556.24 1984.01 561.13 1984.01",
  "M100.473 1933.86C83.456 1937.71 79.868 1924.41 72.612 1924.86C65.357 1925.31 61.899 1931.64 53.363 1931.26C44.827 1930.89 43.037 1923.61 36.009 1922.24C28.981 1920.88 26.366 1925.75 18.751 1925.76C12.767 1925.78 6.87 1922.71 2 1922.23",
  "M414 2091C425.71 2103.94 432.54 2091.12 438.22 2095.66C443.9 2100.2 444.33 2110.56 451.53 2115.16C458.73 2119.77 458.92 2112.91 465.46 2115.84C471.99 2118.76 475.11 2130.91 480.24 2134.02C485.53 2137.23 493.67 2136.85 497.33 2141.32",
  "M106.068 1837.65C89.19 1833.23 92.125 1819.78 85.478 1816.84C78.831 1813.89 72.847 1817.92 65.442 1813.66C58.036 1809.4 59.8 1802.11 54.188 1797.66C48.576 1793.22 44.015 1796.33 37.246 1792.84C31.928 1790.1 28.105 1784.66 24 1782",
]

export default function Story2Waves({ scrollMin, scrollMax, scrubTl, transitionTl, speed, setSvgHeight, setSvgWidth, setSvgTop, banner }) {

  let { locale, scrolled } = useAppContext()

  let { mobile } = usePageContext()

  let fishTweens = [
    {
      timeline: scrubTl,
      id: `fishScrub`,
      ratio: 0.5,
      attr: {
        duration: 0.9,
        ease: 'power3.out',
        // onStart:()=>{console.log('start One')} 
      },
      position: 0.1
    },
  ]

  let fishFinal = ["M565.227 2597.19C563.57 2597.02 562.174 2594.36 560.974 2592.75C558.103 2588.9 562.437 2590.43 563.474 2593.58C563.941 2594.99 565.183 2595.6 565.227 2597.19ZM565.227 2597.19C566.885 2597.36 562.534 2595.08 563.474 2595.08L561.974 2593.58L565.227 2597.19Z"]
  let fishFinalMobile = ["M361.65 2190.31C359.993 2190.14 358.597 2187.48 357.397 2185.87C354.526 2182.02 358.86 2183.55 359.897 2186.7C360.364 2188.11 361.606 2188.72 361.65 2190.31ZM361.65 2190.31C363.308 2190.48 358.957 2188.2 359.897 2188.2L358.397 2186.7L361.65 2190.31Z"]

  useEffect(() => {
    scrubTl && scrubTl
      .to('#fish', {
        opacity: 1,
        duration: 0.1
      }, 1)
      .to('#toFish', {
        opacity: 0,
        duration: 0.1
      }, 1)
      .to('#fish', {
        motionPath: {
          path: '#alongPath',
          align: '#alongPath',
          immediateRender: true,
          alignOrigin: [0.5, 0.5],
          autoRotate: 130,
        },
        ease: 'ease.inout',
        duration: 1,
        transformOrigin: "50% 50%",
      }, 1.05)
      .to('#fish', {
        attr: { d: mobile ? fishFinalMobile[0] : fishFinal[0] },
        duration: 0.5,
      }, 1.55)
      .to('#fish', {
        opacity: 0,
        duration: 0.05,
      }, 1.95)
  }, [scrubTl])

  return (<>
    <AnimateSVG alt='miloweiler photography logo animation'
      scrollMin={scrollMin} scrollMax={scrollMax} speed={speed} setSvgHeight={setSvgHeight} setSvgTop={setSvgTop} setSvgWidth={setSvgWidth}>

      {mobile ?
        <g id='mobile'>

          {/* ====== WAVES ========  */}
          {wavesMobile.map((wavePath, i) => <PathGSAP tweens={[{ timeline: transitionTl, id: `wave${i}Transition`, ratio: 1, attr: { duration: 1, ease: 'none' }, position: 1.4 + (i) * 0.1 }]}
            className='' transitStrokeAnimation transitPortion={0.6} scrolled={0} key={'wavePath' + i} id={'wavePath' + i} d={wavePath} />)
          }


          <PathGSAP tweens={fishTweens} inverse={true} transitStrokeAnimation transitPortion={0.52} id="toFish" d="M373.922 2214.58L386.297 2201.19C383.455 2201.45 378.9 2202.48 373.922 2202.64C367.922 2202.64 361.583 2201.05 356.021 2196.1C345.922 2187.12 361.922 2175.12 370.178 2187.73C372.691 2191.57 372.433 2195.13 372.036 2201.19C370.299 2227.68 391.464 2222.08 398.422 2217.62C415.602 2206.61 401.693 2188 408.73 2181.96C415.767 2175.91 429.066 2195.13 440.709 2185.72" stroke="#FFF5EA" strokeWidth="2" strokeLinecap="round" />
          <path opacity={0} id="fish" d="M371.406 2202.33C365.795 2201.75 359.963 2199.8 355.899 2194.35C346.176 2181.31 367.237 2176.62 370.748 2187.28C372.329 2192.08 371.258 2196.94 371.406 2202.33ZM371.406 2202.33C377.021 2202.91 382.414 2202.13 385.597 2202.13L371.809 2215.92L371.406 2202.33Z" stroke="#FFF5EA" strokeWidth="2" strokeLinecap="round" />
          <path opacity={0} id="alongPath" d="M368.423 2196.62C344.923 2176.12 346.423 2150.12 316.923 2150.12C299.923 2150.12 266.423 2159.12 266.423 2185.62" stroke="black" />
          {/* <path id="fishFinal" d="M361.65 2190.31C359.993 2190.14 358.597 2187.48 357.397 2185.87C354.526 2182.02 358.86 2183.55 359.897 2186.7C360.364 2188.11 361.606 2188.72 361.65 2190.31ZM361.65 2190.31C363.308 2190.48 358.957 2188.2 359.897 2188.2L358.397 2186.7L361.65 2190.31Z" stroke="#FFF5EA" strokeWidth="2" strokeLinecap="round"/> */}


        </g>
        :
        <g id='desktopPage1'>

          {/* ====== WAVES ========  */}
          {waves.map((wavePath, i) => <PathGSAP tweens={[{ timeline: transitionTl, id: `wave${i}Transition`, ratio: 1, attr: { duration: 1, ease: 'none' }, position: 1.4 + (i) * 0.1 }]}
            className='' transitStrokeAnimation transitPortion={0.6} scrolled={0} key={'wavePath' + i} id={'wavePath' + i} d={wavePath} />)
          }

          {/* ====== FISH ========  */}
          <PathGSAP tweens={fishTweens} inverse={true} transitStrokeAnimation transitPortion={0.52} id="toFish" d="M577.5 2621.46L589.875 2608.07C587.033 2608.33 582.478 2609.36 577.5 2609.52C571.5 2609.52 565.161 2607.93 559.599 2602.98C549.5 2594 565.5 2582 573.756 2594.61C576.269 2598.45 576.011 2602.01 575.614 2608.07C573.877 2634.56 595.042 2628.96 602 2624.5C619.18 2613.49 605.271 2594.88 612.308 2588.84C619.345 2582.79 632.644 2602.01 644.287 2592.6" stroke="#FFF5EA" strokeWidth="2" />
          <path opacity={0} id="fish" d="M574.984 2609.21C569.373 2608.63 563.541 2606.68 559.477 2601.23C549.754 2588.19 570.815 2583.5 574.326 2594.16C575.907 2598.96 574.836 2603.82 574.984 2609.21ZM574.984 2609.21C580.599 2609.79 585.992 2609.01 589.175 2609.01L575.387 2622.8L574.984 2609.21Z" stroke="#FFF5EA" strokeWidth="2" strokeLinecap="round" />
          <path opacity={0} id="alongPath" d="M572 2603.5C548.5 2583 550 2557 520.5 2557C503.5 2557 470 2566 470 2592.5" stroke="black" />
          {/* <path id="fishFinal" d="M565.227 2597.19C563.57 2597.02 562.174 2594.36 560.974 2592.75C558.103 2588.9 562.437 2590.43 563.474 2593.58C563.941 2594.99 565.183 2595.6 565.227 2597.19ZM565.227 2597.19C566.885 2597.36 562.534 2595.08 563.474 2595.08L561.974 2593.58L565.227 2597.19Z" stroke="#FFF5EA" strokeWidth="2" /> */}

        </g>}

    </AnimateSVG>


  </>
  )
}